
require 'Coat'

singleton 'Smc.Java'
extends 'Smc.Language'

has.id              = { '+', default = 'JAVA' }
has.name            = { '+', default = 'Java' }
has.option          = { '+', default = '-java' }
has.suffix          = { '+', default = 'Context' }
has.generator       = { '+', isa = 'Smc.Java.Generator',
                        default = function () return require 'Smc.Java.Generator' end }
has.accessFlag      = { '+', default = true }
has.genericFlag     = { '+', default = true }
has.reflectFlag     = { '+', default = true }
has.serialFlag      = { '+', default = true }
has.syncFlag        = { '+', default = true }
has.accessLevels    = { '+', default = {
                                public = 'public',
                                protected = 'protected',
                                package = '/* package */',
                                private = 'private' } }


class 'Smc.Java.Generator'
extends 'Smc.Generator'

has.suffix          = { '+', default = 'java' }

function method:_build_template ()
    return CodeGen{
        TOP = [[
/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://github.com/fperrad/lua-Smc)
 * from file : ${fsm.filename}
 */

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
]],
    }
end
